{
  "version": 4,
  "terraform_version": "1.3.7",
  "serial": 405,
  "lineage": "c826c1d4-7395-483c-07b3-ba95ede1b641",
  "outputs": {
    "ip": {
      "value": "192.168.122.244",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "network_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "bcfb7206d4010e07ad6c96e98f4bc3a12b6b3cc1eb45e32b7da63bc0a848c529",
            "rendered": "version: 2\nethernets:\n  ens3:\n    dhcp4: true",
            "template": "version: 2\nethernets:\n  ens3:\n    dhcp4: true",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1e46046c097a98ed4db47be0c215b8fb590ed487df089567e64ce421aa186eba",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\n\ninstance-id: neo4j\nlocal-hostname: neo4j\nuser: gastonhp1\npassword: Pass.123!\nchpasswd: {expire: False}\nssh_pwauth: False\nssh_authorized_keys:\n  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCWQfoK6MJgVX/YIzBEgeYyQPGEJu7fiy+Ez64YtOf0Jv/vMxDu4kw7zQOzgYWRs+LW/OtZaMZsAMLdrPcjyzDNdUyrEs0NUxNAuo6KjgcWWUXwKaAHLtrMjK/8zKgJYK1YpTHxuq/Q7X4Qa6/I+OEAAG+FE7/5ft/6E8V5odIZQZnuuP3s5MkBSSCWYm9MP5qv5RkSyxsh2y6KBe3q4jxK5vjmhREXGe+94sBP7aPhRWT6bNwwH5gpb14+7MsKyIio6lTaeioePj6qVVKtzgNwhp9/2qYzGIrLCrmSfPtYK88PRQlRrh0HLw1GiFOeF9e+AmGZAz6iB/Few+mKOxl0huzknNeCqctMbxBALCvSl0afKqQvqbOp1TlWdcLqFVe5dIg2hlG3YYpxi4Y1+IVTbKy0E/RuFGoqNvDg2zG76nJhpX+1P4ATOPxryMtN76zBNAQNjf1PQ+IWJresGtsXri10oTzywN5BUAXKpLfKEY/c7U7/Q+O5/vpo66Vkdvc= gastonhp1@PC-Gaston",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\n\ninstance-id: neo4j\nlocal-hostname: neo4j\nuser: gastonhp1\npassword: Pass.123!\nchpasswd: {expire: False}\nssh_pwauth: False\nssh_authorized_keys:\n  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCWQfoK6MJgVX/YIzBEgeYyQPGEJu7fiy+Ez64YtOf0Jv/vMxDu4kw7zQOzgYWRs+LW/OtZaMZsAMLdrPcjyzDNdUyrEs0NUxNAuo6KjgcWWUXwKaAHLtrMjK/8zKgJYK1YpTHxuq/Q7X4Qa6/I+OEAAG+FE7/5ft/6E8V5odIZQZnuuP3s5MkBSSCWYm9MP5qv5RkSyxsh2y6KBe3q4jxK5vjmhREXGe+94sBP7aPhRWT6bNwwH5gpb14+7MsKyIio6lTaeioePj6qVVKtzgNwhp9/2qYzGIrLCrmSfPtYK88PRQlRrh0HLw1GiFOeF9e+AmGZAz6iB/Few+mKOxl0huzknNeCqctMbxBALCvSl0afKqQvqbOp1TlWdcLqFVe5dIg2hlG3YYpxi4Y1+IVTbKy0E/RuFGoqNvDg2zG76nJhpX+1P4ATOPxryMtN76zBNAQNjf1PQ+IWJresGtsXri10oTzywN5BUAXKpLfKEY/c7U7/Q+O5/vpo66Vkdvc= gastonhp1@PC-Gaston",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "neo4j-init",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/var/kvm/neo4j/neo4j-init.iso;5470b45a-5beb-4210-89be-a5c110b4b7cb",
            "meta_data": "",
            "name": "neo4j-init.iso",
            "network_config": "",
            "pool": "neo4j",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\n\ninstance-id: neo4j\nlocal-hostname: neo4j\nuser: gastonhp1\npassword: Pass.123!\nchpasswd: {expire: False}\nssh_pwauth: False\nssh_authorized_keys:\n  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCWQfoK6MJgVX/YIzBEgeYyQPGEJu7fiy+Ez64YtOf0Jv/vMxDu4kw7zQOzgYWRs+LW/OtZaMZsAMLdrPcjyzDNdUyrEs0NUxNAuo6KjgcWWUXwKaAHLtrMjK/8zKgJYK1YpTHxuq/Q7X4Qa6/I+OEAAG+FE7/5ft/6E8V5odIZQZnuuP3s5MkBSSCWYm9MP5qv5RkSyxsh2y6KBe3q4jxK5vjmhREXGe+94sBP7aPhRWT6bNwwH5gpb14+7MsKyIio6lTaeioePj6qVVKtzgNwhp9/2qYzGIrLCrmSfPtYK88PRQlRrh0HLw1GiFOeF9e+AmGZAz6iB/Few+mKOxl0huzknNeCqctMbxBALCvSl0afKqQvqbOp1TlWdcLqFVe5dIg2hlG3YYpxi4Y1+IVTbKy0E/RuFGoqNvDg2zG76nJhpX+1P4ATOPxryMtN76zBNAQNjf1PQ+IWJresGtsXri10oTzywN5BUAXKpLfKEY/c7U7/Q+O5/vpo66Vkdvc= gastonhp1@PC-Gaston"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_pool.neo4j"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "neo4j-vm",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/kvm/neo4j/neo4j-init.iso;5470b45a-5beb-4210-89be-a5c110b4b7cb",
            "cmdline": [],
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              },
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "1",
                "target_type": "virtio",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/kvm/neo4j/neo4j-worker.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "996fc95f-b25e-4eca-a4f2-5124eb3ca9fa",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 1024,
            "metadata": null,
            "name": "neo4j-vm",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.244"
                ],
                "bridge": "",
                "hostname": "neo4j-vm",
                "mac": "52:54:00:0E:ED:09",
                "macvtap": "",
                "network_id": "5a0701dd-befd-4ece-9ceb-10768333e41a",
                "network_name": "default",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.neo4j-init",
            "libvirt_pool.neo4j",
            "libvirt_volume.neo4j-master-qcow2",
            "libvirt_volume.neo4j-worker-qcow2"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_pool",
      "name": "neo4j",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation": 200044634112,
            "available": 270841561088,
            "capacity": 470886195200,
            "id": "32d95dfb-66db-448e-8d44-7b411fa879e2",
            "name": "neo4j",
            "path": "/var/kvm/neo4j",
            "type": "dir",
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "neo4j-master-qcow2",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/kvm/neo4j/neo4j-master.qcow2",
            "name": "neo4j-master.qcow2",
            "pool": "neo4j",
            "size": 2361393152,
            "source": "https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img",
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_pool.neo4j"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "neo4j-worker-qcow2",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/kvm/neo4j/neo4j-master.qcow2",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/kvm/neo4j/neo4j-worker.qcow2",
            "name": "neo4j-worker.qcow2",
            "pool": "neo4j",
            "size": 10737418240,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_pool.neo4j",
            "libvirt_volume.neo4j-master-qcow2"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "neo4j-playbook",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7600985125191313200",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "libvirt_domain.neo4j-vm"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
